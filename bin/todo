#!/usr/bin/python

from sqlite3 import dbapi2 as sqlite

class Todo:

	def __init__(self):
		self.options = None
		self.args = None

	def main(self):
		from optparse import OptionParser
		parser = OptionParser( "usage: %prog [options] command")
		parser.add_option("-s", "--status", dest="status", default='open',
			help="Only show tasks with this status. 'all' for all tasks. 'open' tasks shown by default.")
		parser.add_option("-i", "--id", dest="id",
			help="Only show tasks associated with this task id")

		(self.options, self.args) = parser.parse_args()
		if len(self.args) != 1:
			parser.error("one command required")

		s='self.'+self.args[0]+'()'
		try:
			eval(s)
		except (AttributeError):
			parser.error("that is not a command")

	def showtasks(self):
		t=[]
		sql = "select * from task where _id > '0'"
		if self.options.status != 'all':
			sql = sql+"and status=?"
			t.append(self.options.status)
		if self.options.id != None:
			sql = sql+"and _id=? or parentId=?"
			t.append(self.options.id)
			t.append(self.options.id)

		conn = sqlite.connect('todo')
		conn.row_factory = sqlite.Row
		c = conn.cursor()
		c.execute(sql,t)
		print "%s tasks" % self.options.status
		for r in c:
			pid = r['parentId']
			if pid==None:
				pid=""
			if self.options.status == 'all':
				print "%5s %5s %-10s %-50s" % (r['_id'],pid,r['status'],r['name'])
			else:
				print "%5s %5s %-50s" % (r['_id'],pid,r['name'])

if __name__ == '__main__':
	todo = Todo()
	todo.main()
